<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0/EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.frogs.matzip.rest.RestMapper">
	<insert id="insRest" parameterType="RestVO" useGeneratedKeys="true"  keyProperty="i_rest">
		INSERT INTO t_rest
		(nm, addr, lat, lng, i_category, phone, price_range, open_time, close_time, ctnt, i_district)
		VALUES
		(#{nm}, #{addr}, #{lat}, #{lng}, #{i_category}, #{phone}, #{price_range}, #{open_time}, #{close_time}, #{ctnt}, #{i_district})
	</insert>
	
	<insert id="insFoodPic" parameterType="RestFoodVO">
		INSERT INTO t_rest_pic 
		(i_rest, seq, food_pic)
		SELECT #{i_rest}, ifnull(max(seq), 0) + 1, #{food_pic}
		FROM t_rest_pic
	</insert>
	
	<insert id="insReview" parameterType="RestReviewVO">
		INSERT INTO t_review
		(i_user, i_rest, grade, ctnt)
		VALUES
		(#{i_user}, #{i_rest}, #{grade}, #{ctnt})
	</insert>
	
	<select id="selRest" parameterType="RestPARAM" resultType="RestDMI">
		SELECT A.i_rest, A.nm, A.addr, A.lat, A.lng, A.i_category, A.menu_pic, A.hit, A.r_dt, A.m_dt
			, A.phone, A.price_range, TIME_FORMAT(A.open_time, '%H:%i') as open_time, TIME_FORMAT(A.close_time, '%H:%i') as close_time, A.ctnt, A.i_district
			, CASE WHEN B.i_rest IS NULL THEN 0 ELSE 1 END AS is_favorite
			, COUNT(B.i_rest) as fav_cnt
			, C.val as category_val
			, TRUNCATE(AVG(D.grade),1) as avg_grade
		FROM t_rest A
		LEFT JOIN t_fav B
			ON A.i_rest = B.i_rest
			<if test="i_user > 0">
				AND B.i_user = #{i_user}
			</if>
		LEFT JOIN t_category C
			ON A.i_category = C.i_category
		LEFT JOIN t_review D
			ON A.i_rest = D.i_rest
		<if test="i_rest > 0">
			WHERE A.i_rest = #{i_rest}
		</if>
	</select>
	
	<select id="selRecRestList" parameterType="RestPARAM" resultType="RestDMI">
		SELECT A.i_rest, TRUNCATE(AVG(A.grade),1) as avg_grade
		, B.nm, SUBSTRING_INDEX(B.addr," ",2) AS addr 
		, C.food_pic
		, D.val AS category_val
		FROM t_review A
		LEFT JOIN t_rest B
			ON A.i_rest = B.i_rest
		LEFT JOIN t_rest_pic C
			ON A.i_rest = C.i_rest 
		LEFT JOIN t_category D
			ON B.i_category = D.i_category
		GROUP BY i_rest
		ORDER BY TRUNCATE(AVG(grade),1) DESC
		LIMIT 8;
	</select>
	
	<select id="selCategoryList" resultType="RestDMI">
		SELECT i_category, val as category_val FROM t_category
	</select>
	
	<select id="selDistrictList" resultType="RestDMI">
		SELECT i_district, val as district_val FROM t_district
	</select>
	
	<select id="selRestList" parameterType="RestPARAM" resultType="RestDMI">
	 	SELECT A.i_rest, A.nm, A.addr, A.lat, A.lng
	 		, TRUNCATE(AVG(B.grade), 1) as avg_grade, COUNT(DISTINCT B.seq) as review_cnt
	 		, C.val as category_val, D.food_pic, E.val as district_val, COUNT(DISTINCT F.i_user) as fav_cnt
	 	FROM t_rest A
	 	LEFT JOIN t_review B
	 		ON A.i_rest = B.i_rest
	 	LEFT JOIN t_category C
	 		ON A.i_category = C.i_category
	 	LEFT JOIN t_rest_pic D
	 		ON A.i_rest = D.i_rest
	 	LEFT JOIN t_district E
	 		ON A.i_district = E.i_district
	 	LEFT JOIN t_fav F
	 		ON A.i_rest = F.i_rest
	 	<if test="i_category > 0">
	 		WHERE A.i_category = #{i_category}
	 	</if>
	 	<if test="search_text != null">
	 		WHERE A.nm like #{sql_search_text} or A.addr like #{sql_search_text}
	 	</if>
	 	<if test="sw_lat != 0 || sw_lng != 0">
	 		WHERE A.lat BETWEEN #{sw_lat} AND #{ne_lat}
			AND A.lng BETWEEN #{sw_lng} AND #{ne_lng}
	 	</if>
	 	GROUP BY i_rest
	 	ORDER BY TRUNCATE(AVG(B.grade),1) DESC, A.i_rest
	</select>
	
	<select id ="selFoodPicList" parameterType="RestPARAM" resultType="RestFoodVO">
		SELECT i_rest, seq, food_pic
		FROM t_rest_pic
		WHERE i_rest = #{i_rest}
	</select>
	
	<select id ="selReviewList" parameterType="RestPARAM" resultType="RestDMI">
		SELECT A.seq, A.i_user, A.i_rest, A.grade, A.ctnt, A.m_dt, B.nm
		FROM t_review A  
		LEFT JOIN t_user B
		ON A.i_user = B.i_user
		WHERE A.i_rest = #{i_rest}
		ORDER BY m_dt DESC
	</select>
	
	<select id="selReviewCount" parameterType="RestReviewVO" resultType="RestDMI">
		SELECT COUNT(seq) AS review_cnt FROM t_review
		WHERE i_rest = #{i_rest}
	</select>
	
	<update id="updRestMenu" parameterType="RestVO">
		UPDATE t_rest SET menu_pic = #{menu_pic}
		WHERE i_rest = #{i_rest}
	</update>
	
	<update id="updReview" parameterType="RestReviewVO">
		UPDATE t_review SET ctnt = #{ctnt}
		WHERE i_user = #{i_user}
		AND seq = #{seq} 
	</update>
	
	<delete id="delReview" parameterType="RestReviewVO">
		DELETE FROM t_review
		WHERE i_user = #{i_user}
		AND seq = #{seq}
	</delete>
</mapper>